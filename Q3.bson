/*
Bishal Paul
Solution to Q3 for range based query
*/

db.test.drop();
user test;
db.test.insert({ 
	"user":{
		"_id":124, "name":"Harry"
	}, 
	"location":{ 
		"_id":346, "user":124, "lat":76.122134, "lon":32.00422 
	}
})
db.test.insert({ 
	"user":{
		"_id":125, "name":"Paul" 
	}, 
	"location":{ 
		"_id":347, "user":125, "lat":76.122134, "lon":31.00422 
	}
})
db.test.insert({ 
	"user":{
		"_id":126, "name":"Joy" 
	}, 
	"location":{ 
		"_id":348, "user":126, "lat":76.100231, "lon":32.00422 
	}
})
db.test.insert({ 
	"user":{
		"_id":127, "name":"Sagar" 
	}, 
	"location":{ 
		"_id":349, "user":127, "lat":71.100231, "lon":32.00422 
	}
})
// finding the users inside range
db.test.find( { $where : 
	function getDistanceFromLatLonInKm(lat2,lon2) {
	  var R = 6371; // Radius of the earth in km
	  var latC = 76.12121;
	  var lonC = 32.12122;
	  var range = 5.0;
	  var dLat = (this.location.lat-latC)*(Math.PI/180);  // deg2rad below
	  var dLon = (this.location.lon-lonC)*(Math.PI/180); 
	  var a = 
	    Math.sin(dLat/2) * Math.sin(dLat/2) +
	    Math.cos((latC)*(Math.PI/180)) * Math.cos((this.location.lat)*(Math.PI/180)) * 
	    Math.sin(dLon/2) * Math.sin(dLon/2)
	    ; 
	  var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a)); 
	  var d = R * c; // Distance in km
	  if(d<range)
	  	return true;
	  else
	  	return false;
	}
})
